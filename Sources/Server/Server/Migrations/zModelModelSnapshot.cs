// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Server.Model;
using System;

namespace Server.Migrations
{
    [DbContext(typeof(zModel))]
    partial class zModelModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityModel.Model.eCongNoNhaCungCap", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("ConLai");

                    b.Property<int>("IDMaster");

                    b.Property<int>("IDNhaCungCap");

                    b.Property<bool>("IsNhapHang");

                    b.Property<bool>("IsSoDuDauKy");

                    b.Property<bool>("IsThanhToan");

                    b.Property<bool>("IsTraHang");

                    b.Property<string>("MaNhaCungCap");

                    b.Property<DateTime>("Ngay");

                    b.Property<decimal>("NoCu");

                    b.Property<string>("TenNhaCungCap");

                    b.Property<decimal>("ThanhToan");

                    b.Property<decimal>("TongTien");

                    b.HasKey("KeyID");

                    b.ToTable("eCongNoNhaCungCap");
                });

            modelBuilder.Entity("EntityModel.Model.eDonViTinh", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GhiChu");

                    b.Property<bool>("KichHoat");

                    b.Property<string>("Ma");

                    b.Property<string>("Ten");

                    b.HasKey("KeyID");

                    b.ToTable("eDonViTinh");
                });

            modelBuilder.Entity("EntityModel.Model.eHienThi", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.HasKey("KeyID");

                    b.ToTable("eHienThi");
                });

            modelBuilder.Entity("EntityModel.Model.eKhachHang", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiaChi");

                    b.Property<string>("Email");

                    b.Property<string>("GhiChu");

                    b.Property<string>("GioiTinh");

                    b.Property<byte[]>("HinhAnh");

                    b.Property<string>("Ho");

                    b.Property<int>("IDGioiTinh");

                    b.Property<int>("IDTinhThanh");

                    b.Property<string>("Ma");

                    b.Property<DateTime>("NgaySinh");

                    b.Property<string>("SoDienThoai");

                    b.Property<string>("Ten");

                    b.Property<string>("TinhThanh");

                    b.HasKey("KeyID");

                    b.ToTable("eKhachHang");
                });

            modelBuilder.Entity("EntityModel.Model.eKho", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GhiChu");

                    b.Property<bool>("KichHoat");

                    b.Property<string>("Ma");

                    b.Property<string>("Ten");

                    b.HasKey("KeyID");

                    b.ToTable("eKho");
                });

            modelBuilder.Entity("EntityModel.Model.eNhaCungCap", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiaChi");

                    b.Property<string>("DienThoai");

                    b.Property<string>("GhiChu");

                    b.Property<int>("IDTinhThanh");

                    b.Property<bool>("KichHoat");

                    b.Property<string>("Ma");

                    b.Property<string>("NguoiLienHe");

                    b.Property<string>("Ten");

                    b.Property<string>("TinhThanh");

                    b.HasKey("KeyID");

                    b.ToTable("eNhaCungCap");
                });

            modelBuilder.Entity("EntityModel.Model.eNhapHangNhaCungCap", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("ChietKhau");

                    b.Property<string>("GhiChu");

                    b.Property<int>("IDNhaCungCap");

                    b.Property<string>("Ma");

                    b.Property<string>("MaLoHang");

                    b.Property<string>("MaNhaCungCap");

                    b.Property<DateTime>("NgayNhap");

                    b.Property<decimal>("SoLuong");

                    b.Property<string>("TenNhaCungCap");

                    b.Property<decimal>("ThanhTien");

                    b.Property<decimal>("TienChietKhau");

                    b.Property<decimal>("TienVAT");

                    b.Property<decimal>("TongTien");

                    b.Property<decimal>("VAT");

                    b.HasKey("KeyID");

                    b.ToTable("eNhapHangNhaCungCap");
                });

            modelBuilder.Entity("EntityModel.Model.eNhapHangNhaCungCapChiTiet", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("ChietKhau");

                    b.Property<decimal>("DonGia");

                    b.Property<string>("GhiChu");

                    b.Property<DateTime?>("HanSuDung");

                    b.Property<int>("IDDonViTinh");

                    b.Property<int>("IDKho");

                    b.Property<int>("IDNhapHangNhaCungCap");

                    b.Property<int>("IDSanPham");

                    b.Property<string>("MaDonViTinh");

                    b.Property<string>("MaKho");

                    b.Property<string>("MaSanPham");

                    b.Property<decimal>("SoLuong");

                    b.Property<decimal>("SoLuongLe");

                    b.Property<decimal>("SoLuongSi");

                    b.Property<string>("TenDonViTinh");

                    b.Property<string>("TenKho");

                    b.Property<string>("TenSanPham");

                    b.Property<decimal>("ThanhTien");

                    b.Property<decimal>("TienChietKhau");

                    b.Property<decimal>("TienVAT");

                    b.Property<decimal>("TongTien");

                    b.Property<decimal>("VAT");

                    b.HasKey("KeyID");

                    b.ToTable("eNhapHangNhaCungCapChiTiet");
                });

            modelBuilder.Entity("EntityModel.Model.eNhomDonViTinh", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GhiChu");

                    b.Property<bool>("KichHoat");

                    b.Property<string>("Ma");

                    b.Property<string>("Ten");

                    b.HasKey("KeyID");

                    b.ToTable("eNhomDonViTinh");
                });

            modelBuilder.Entity("EntityModel.Model.eNhomKhachHang", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GhiChu");

                    b.Property<bool>("KichHoat");

                    b.Property<string>("Ma");

                    b.Property<string>("Ten");

                    b.HasKey("KeyID");

                    b.ToTable("eNhomKhachHang");
                });

            modelBuilder.Entity("EntityModel.Model.eNhomNhaCungCap", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GhiChu");

                    b.Property<bool>("KichHoat");

                    b.Property<string>("Ma");

                    b.Property<string>("Ten");

                    b.HasKey("KeyID");

                    b.ToTable("eNhomNhaCungCap");
                });

            modelBuilder.Entity("EntityModel.Model.eNhomSanPham", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GhiChu");

                    b.Property<bool>("KichHoat");

                    b.Property<string>("Ma");

                    b.Property<string>("Ten");

                    b.HasKey("KeyID");

                    b.ToTable("eNhomSanPham");
                });

            modelBuilder.Entity("EntityModel.Model.eQuyDoiDonVi", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DonViTinh");

                    b.Property<string>("DonViTinhQuyDoi");

                    b.Property<decimal>("GiaTri");

                    b.Property<int>("IDDonViTinh");

                    b.Property<int>("IDDonViTinhQuyDoi");

                    b.HasKey("KeyID");

                    b.ToTable("eQuyDoiDonVi");
                });

            modelBuilder.Entity("EntityModel.Model.eQuyDoiTienTe", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("GiaTri");

                    b.Property<int>("IDTienTe");

                    b.Property<int>("IDTienTeQuyDoi");

                    b.Property<string>("TienTe");

                    b.Property<string>("TienTeQuyDoi");

                    b.HasKey("KeyID");

                    b.ToTable("eQuyDoiTienTe");
                });

            modelBuilder.Entity("EntityModel.Model.eSanPham", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ColorHex");

                    b.Property<string>("GhiChu");

                    b.Property<int>("IDDonViTinh");

                    b.Property<string>("KichThuoc");

                    b.Property<string>("Ma");

                    b.Property<string>("MaDonViTinh");

                    b.Property<string>("MauSac");

                    b.Property<string>("Ten");

                    b.Property<string>("TenDonViTinh");

                    b.HasKey("KeyID");

                    b.ToTable("eSanPham");
                });

            modelBuilder.Entity("EntityModel.Model.eSoDuDauKyKhachHang", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GhiChu");

                    b.Property<int>("IDKhachHang");

                    b.Property<string>("MaKhachHang");

                    b.Property<DateTime>("NgayNhap");

                    b.Property<decimal>("SoTien");

                    b.Property<string>("TenKhachHang");

                    b.HasKey("KeyID");

                    b.ToTable("eSoDuDauKyKhachHang");
                });

            modelBuilder.Entity("EntityModel.Model.eSoDuDauKyNhaCungCap", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GhiChu");

                    b.Property<int>("IDNhaCungCap");

                    b.Property<string>("MaNhaCungCap");

                    b.Property<DateTime>("NgayNhap");

                    b.Property<decimal>("SoTien");

                    b.Property<string>("TenNhaCungCap");

                    b.HasKey("KeyID");

                    b.ToTable("eSoDuDauKyNhaCungCap");
                });

            modelBuilder.Entity("EntityModel.Model.eTienTe", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KyHieu");

                    b.Property<byte[]>("Logo");

                    b.Property<string>("Ma");

                    b.Property<string>("MaDienTu");

                    b.Property<string>("Ten");

                    b.HasKey("KeyID");

                    b.ToTable("eTienTe");
                });

            modelBuilder.Entity("EntityModel.Model.eTinhThanh", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DienGiai");

                    b.Property<int>("IDLoai");

                    b.Property<int>("IDTinhThanh");

                    b.Property<string>("Loai");

                    b.Property<string>("LocationCode");

                    b.Property<string>("Ma");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Ten");

                    b.Property<string>("TinhThanh");

                    b.Property<string>("ZipCode");

                    b.HasKey("KeyID");

                    b.ToTable("eTinhThanh");
                });

            modelBuilder.Entity("EntityModel.Model.eTonKho", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("HanSuDung");

                    b.Property<int>("IDDonViTinh");

                    b.Property<int>("IDKho");

                    b.Property<int>("IDNhomSanPham");

                    b.Property<int>("IDSanPham");

                    b.Property<string>("MaDonViTinh");

                    b.Property<string>("MaKho");

                    b.Property<string>("MaNhomSanPham");

                    b.Property<string>("MaSanPham");

                    b.Property<DateTime>("Ngay");

                    b.Property<decimal>("SoLuongKhachHangTra");

                    b.Property<decimal>("SoLuongNhap");

                    b.Property<decimal>("SoLuongTon");

                    b.Property<decimal>("SoLuongTraNhaCungCap");

                    b.Property<decimal>("SoLuongXuat");

                    b.Property<string>("TenDonViTinh");

                    b.Property<string>("TenKho");

                    b.Property<string>("TenNhomSanPham");

                    b.Property<string>("TenSanPham");

                    b.HasKey("KeyID");

                    b.ToTable("eTonKho");
                });

            modelBuilder.Entity("EntityModel.Model.eTonKhoDauKy", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GhiChu");

                    b.Property<int>("IDDonViTinh");

                    b.Property<int>("IDKho");

                    b.Property<int>("IDSanPham");

                    b.Property<string>("MaDonViTinh");

                    b.Property<string>("MaKho");

                    b.Property<string>("MaSanPham");

                    b.Property<DateTime>("NgayNhap");

                    b.Property<decimal>("SoLuong");

                    b.Property<string>("TenDonViTinh");

                    b.Property<string>("TenKho");

                    b.Property<string>("TenSanPham");

                    b.HasKey("KeyID");

                    b.ToTable("eTonKhoDauKy");
                });

            modelBuilder.Entity("EntityModel.Model.xAccount", b =>
                {
                    b.Property<int>("KeyID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IDPermission");

                    b.Property<bool>("IsEnable");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("PermissionName");

                    b.Property<string>("PersonelName");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("KeyID");

                    b.ToTable("xAccount");
                });

            modelBuilder.Entity("EntityModel.Model.xAgency", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Credentials");

                    b.Property<string>("Description");

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("HostAddress");

                    b.Property<int>("HostPort");

                    b.Property<bool>("IsEnable");

                    b.Property<byte[]>("Logo");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .HasMaxLength(255);

                    b.HasKey("KeyID");

                    b.ToTable("xAgency");
                });

            modelBuilder.Entity("EntityModel.Model.xAppConfig", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("colBinary")
                        .HasMaxLength(128);

                    b.Property<bool?>("colBit");

                    b.Property<DateTime?>("colDateTime");

                    b.Property<decimal?>("colDecimal");

                    b.Property<double?>("colFloat");

                    b.Property<int?>("colInt");

                    b.Property<string>("colName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("colString");

                    b.Property<string>("colXML");

                    b.HasKey("KeyID");

                    b.ToTable("xAppConfig");
                });

            modelBuilder.Entity("EntityModel.Model.xDisplay", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Caption");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("EnableEdit");

                    b.Property<string>("FieldName");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("ParentName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("Showing");

                    b.Property<string>("TextAlign")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .HasMaxLength(255);

                    b.Property<int>("VisibleIndex");

                    b.HasKey("KeyID");

                    b.ToTable("xDisplay");
                });

            modelBuilder.Entity("EntityModel.Model.xFeature", b =>
                {
                    b.Property<string>("KeyID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255);

                    b.Property<string>("EN")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("IDGroup")
                        .HasMaxLength(255);

                    b.Property<bool>("IsAdd");

                    b.Property<bool>("IsDelete");

                    b.Property<bool>("IsEdit");

                    b.Property<bool>("IsEnable");

                    b.Property<bool>("IsExportExcel");

                    b.Property<bool>("IsPrintPreview");

                    b.Property<bool>("IsSave");

                    b.Property<int>("ItemCount");

                    b.Property<int>("Level");

                    b.Property<string>("VN")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("KeyID");

                    b.ToTable("xFeature");
                });

            modelBuilder.Entity("EntityModel.Model.xLayoutItemCaption", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ControlAlignment")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("EN")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LayoutControlItem")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LayoutControlName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("TextLocation")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("TextVisible");

                    b.Property<string>("VN")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Visibility")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("KeyID");

                    b.ToTable("xLayoutItemCaption");
                });

            modelBuilder.Entity("EntityModel.Model.xLog", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AccessDate");

                    b.Property<int>("IDPersonnel");

                    b.Property<string>("NewValue");

                    b.Property<string>("OldValue");

                    b.Property<string>("State");

                    b.Property<string>("TableName");

                    b.HasKey("KeyID");

                    b.ToTable("xLog");
                });

            modelBuilder.Entity("EntityModel.Model.xMsgDictionary", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EN")
                        .IsRequired();

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("MsgName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("VN")
                        .IsRequired();

                    b.HasKey("KeyID");

                    b.ToTable("xMsgDictionary");
                });

            modelBuilder.Entity("EntityModel.Model.xPermission", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsEnable");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("KeyID");

                    b.ToTable("xPermission");
                });

            modelBuilder.Entity("EntityModel.Model.xPersonnel", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<bool>("IsAccount");

                    b.Property<bool>("IsEnable");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Phone");

                    b.HasKey("KeyID");

                    b.ToTable("xPersonnel");
                });

            modelBuilder.Entity("EntityModel.Model.xUserFeature", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IDFeature")
                        .HasMaxLength(255);

                    b.Property<int>("IDPermission");

                    b.Property<bool>("IsAdd");

                    b.Property<bool>("IsDelete");

                    b.Property<bool>("IsEdit");

                    b.Property<bool>("IsEnable");

                    b.Property<bool>("IsExportExcel");

                    b.Property<bool>("IsPrintPreview");

                    b.Property<bool>("IsSave");

                    b.HasKey("KeyID");

                    b.ToTable("xUserFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
